/*
 * Copyright 2015-2020 Ritense BV, the Netherlands.
 *
 * Licensed under EUPL, Version 1.2 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dockerCompose {
    projectName = "milestones"
    isRequiredBy(test)
    isRequiredBy(checkExtended)
    useComposeFiles.addAll("../docker-resources/docker-compose-base-test.yml", "docker-compose-override.yml")
}

dependencies {
    implementation project(":contract")
    implementation project(":core")
    testImplementation project(path: ":core", configuration: 'testOutput')
    implementation project(":web")

    // Spring
    implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:3.2.1"
    implementation "org.springframework:spring-jdbc"

    // Mapstruct
    implementation "org.mapstruct:mapstruct-jdk8:${mapstruct_version}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"

    // Hibernate
    implementation "org.hibernate:hibernate-core"
    implementation "org.hibernate:hibernate-envers"

    implementation "io.dropwizard.metrics:metrics-core"
    implementation "io.dropwizard.metrics:metrics-annotation:4.0.5"

    testImplementation "org.springframework.security:spring-security-test"
}

apply from: "gradle/publishing.gradle"
/*
 * Copyright 2015-2023 Ritense BV, the Netherlands.
 *
 * Licensed under EUPL, Version 1.2 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dockerCompose {
    projectName = "core"
    isRequiredBy(integrationTesting)
    isRequiredBy(securityTesting)
    useComposeFiles.addAll("../docker-resources/docker-compose-base-test.yml", "docker-compose-override.yml")
}

dependencies {
    implementation project(":contract")
    implementation project(":resource")
    implementation project(":web")
    implementation project(':tenancy')

    testImplementation project(':test-utils-common')

    api "org.springframework.security:spring-security-core"
    api "org.springframework.boot:spring-boot"
    api "org.springframework.data:spring-data-commons"
    api "javax.inject:javax.inject:${javaxInjectVersion}"

    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    implementation "com.fasterxml.jackson.module:jackson-module-blackbird"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names"
    implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation "io.github.microutils:kotlin-logging:${kotlinLoggingVersion}"

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    // Camunda
    api "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter:${camundaVersion}"
    api "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:${camundaVersion}"

    // Cockpit
    api "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:${camundaVersion}"

    // Camunda plugins
    implementation "org.camunda.bpm:camunda-engine-plugin-spin:${camundaVersion}"
    implementation "org.camunda.bpm:camunda-engine-plugin-connect:${camundaVersion}"
    api "org.camunda.bpm.extension.reactor:camunda-bpm-reactor-spring-starter:${camundaReactorSpringVersion}"

    // spring boot admin client
    implementation "de.codecentric:spring-boot-admin-starter-client:${springBootAdminStarterClientVersion}"

    implementation "org.springframework.security:spring-security-data"
    implementation "org.springframework:spring-jdbc"
    implementation "org.springframework:spring-orm"
    implementation "org.springframework:spring-aspects"

    // Jackson
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.core:jackson-annotations"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-json-org"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
    implementation "com.fasterxml.jackson.module:jackson-module-blackbird"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names"

    // MyBatis (for camunda and our custom queries)
    implementation "org.mybatis:mybatis:${mybatisVersion}"
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootStarterVersion}"

    implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"

    // Removed since JDK 9, explicitly need it to go through XML
    implementation "javax.xml.bind:jaxb-api:${jaxbApiVersion}"

    // Hibernate
    implementation "org.hibernate:hibernate-core"
    implementation "org.hibernate:hibernate-envers"

    // Shedlock
    implementation "net.javacrumbs.shedlock:shedlock-spring:${shedlockVersion}"
    implementation "net.javacrumbs.shedlock:shedlock-provider-jdbc-template:${shedlockVersion}"

    implementation('com.zaxxer:HikariCP') {
        exclude(module: 'tools')
    }

    implementation "org.liquibase:liquibase-core"

    implementation "io.dropwizard.metrics:metrics-core"
    implementation "io.dropwizard.metrics:metrics-annotation"
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    implementation "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    // Camunda test
    testImplementation "org.camunda.community.mockito:camunda-platform-7-mockito:${camundaMockitoVersion}"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
}

apply from: "gradle/publishing.gradle"

/*
 * Copyright 2015-2020 Ritense BV, the Netherlands.
 *
 * Licensed under EUPL, Version 1.2 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
    api "org.apache.commons:commons-lang3:${commonsLangVersion}"
    api "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    api "org.zalando:problem-spring-web:${problemSpringWebVersion}"
    api "commons-io:commons-io:${commonsIoVersion}"
    api "commons-codec:commons-codec:${commonsCodecVersion}"
    api "commons-validator:commons-validator:${commonsValidatorVersion}"
    api "com.fasterxml.jackson.module:jackson-module-kotlin"
    api "com.vladmihalcea:hibernate-types-55:${hibernateTypesVersion}"

    api "org.springframework.security:spring-security-core"
    api "org.springframework.boot:spring-boot"
    api "org.springframework.data:spring-data-commons"
    api "javax.inject:javax.inject:${javaxInjectVersion}"

    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    implementation "com.fasterxml.jackson.module:jackson-module-blackbird"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names"
    implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation "io.github.microutils:kotlin-logging:${kotlinLoggingVersion}"

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    implementation("org.liquibase:liquibase-core:${liquibaseVersion}") {
        force = true
    }
}

apply from: "gradle/publishing.gradle"
/*
 * Copyright 2015-2020 Ritense BV, the Netherlands.
 *
 * Licensed under EUPL, Version 1.2 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dockerCompose {
    projectName = "objecten-api-authentication"
    isRequiredBy(integrationTesting)
    isRequiredBy(securityTesting)
    useComposeFiles.addAll("../../docker-resources/docker-compose-base-test.yml", "docker-compose-override.yml")
}

dependencies {
    implementation project(':core')
    implementation project(':plugin')
    implementation project(':zgw:objecten-api')

    implementation "io.github.microutils:kotlin-logging:2.0.4"
    implementation "org.springframework.boot:spring-boot-starter-webflux"

    testImplementation "org.springframework.boot:spring-boot-starter-data-jpa"
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    testImplementation "com.squareup.okhttp3:okhttp:4.10.0"
    //Kotlin
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    jar {
        enabled = true
        manifest {
            attributes("Implementation-Title": "Objecten API Authentication plugin spring boot starter")
            attributes("Implementation-Version": projectVersion)
        }
    }
}

apply from: "gradle/publishing.gradle"
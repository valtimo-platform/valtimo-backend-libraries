/*
 * Copyright 2015-2023 Ritense BV, the Netherlands.
 *
 * Licensed under EUPL, Version 1.2 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dockerCompose {
    projectName = "notificaties-api"

    integrationTestingPostgresql {
        isRequiredBy(project.tasks.integrationTestingPostgresql)
        isRequiredBy(project.tasks.securityTesting)
        useComposeFiles.addAll("../../docker-resources/docker-compose-base-test-postgresql.yml", "docker-compose-override-postgresql.yml")
    }

    integrationTestingMysql {
        isRequiredBy(project.tasks.integrationTestingMysql)
        useComposeFiles.addAll("../../docker-resources/docker-compose-base-test-mysql.yml", "docker-compose-override-mysql.yml")
    }
}

dependencies {
    implementation project(':contract')
    implementation project(':plugin')

    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "io.github.microutils:kotlin-logging:${kotlinLoggingVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$kotlinCoroutinesVersion"

    //test
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    testImplementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    testImplementation "org.mockito.kotlin:mockito-kotlin:${mockitoKotlinVersion}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    testImplementation("com.mysql:mysql-connector-j")


    jar {
        enabled = true
        manifest {
            attributes("Implementation-Title": "ZGW Notificaties API plugin spring boot starter")
            attributes("Implementation-Version": projectVersion)
        }
    }
}

apply from: "gradle/publishing.gradle"